// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }



// import { Geist, Geist_Mono, Montserrat, Roboto, Poppins } from "next/font/google";
// import "./globals.css";

// // ✅ Geist Sans Font
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// // ✅ Geist Mono Font
// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// // ✅ Montserrat Font
// const montserrat = Montserrat({
//   subsets: ["latin"],
//   weight: ["100", "300", "400", "500", "700", "900"],
//   display: "swap",
// });

// // ✅ Roboto Font
// const roboto = Roboto({
//   subsets: ["latin"],
//   weight: ["100", "300", "400", "500", "700", "900"],
//   display: "swap",
// });

// // ✅ Poppins Font
// const poppins = Poppins({
//   subsets: ["latin"],
//   weight: ["100", "300", "400", "500", "700", "900"],
//   display: "swap",
//   variable: "--font-poppins",
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} ${montserrat.className} ${roboto.className} ${poppins.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }


// import {  Alexandria } from "next/font/google";
// import "./globals.css";

// // ✅ Geist Sans Font
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// // ✅ Geist Mono Font
// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// // ✅ Montserrat Font
// const montserrat = Montserrat({
//   subsets: ["latin"],
//   weight: ["100", "300", "400", "500", "700", "900"],
//   display: "swap",
// });

// // ✅ Roboto Font
// const roboto = Roboto({
//   subsets: ["latin"],
//   weight: ["100", "300", "400", "500", "700", "900"],
//   display: "swap",
// });

// // ✅ Poppins Font
// const poppins = Poppins({
//   subsets: ["latin"],
//   weight: ["100", "300", "400", "500", "700", "900"],
//   display: "swap",
//   variable: "--font-poppins",
// });

// // ✅ Alexandria Font
// const alexandria = Alexandria({
//   subsets: ["latin"],
//   weight: ["100", "300", "400", "500", "700", "900"],
//   display: "swap",
//   variable: "--font-alexandria",
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} ${montserrat.className} ${roboto.className} ${poppins.variable} ${alexandria.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }



import { Alexandria } from "next/font/google";
import "./globals.css";

// Import Alexandria Font
const alexandria = Alexandria({
  subsets: ["latin"],
  weight: ["100", "300", "400", "500", "700", "900"],
  display: "swap",
  variable: "--font-alexandria",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={`${alexandria.variable} antialiased`}>
        {children}
      </body>
    </html>
  );
}
